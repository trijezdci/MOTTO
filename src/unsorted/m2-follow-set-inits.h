/* M2C FOLLOW set initialisers -- generated by gen_follow_sets.c */

#ifndef M2C_TOKENSET_LITERAL_T
#define M2C_TOKENSET_LITERAL_T

struct m2c_tokenset_literal_t { uint_t s0, s1, s2, n; };
typedef struct m2c_tokenset_literal_t m2c_tokenset_literal_t;

#endif /* M2C_TOKENSET_LITERAL_T */

#ifndef M2C_FOLLOW_SET_INITS_H
#define M2C_FOLLOW_SET_INITS_H

#define INIT_FOLLOW_OF_DEFINITION_MODULE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000400, /* counter: */ 1 }

#define INIT_FOLLOW_OF_IMPORT \
  { /* bits: */ 0x108050C8, 0x00000050, 0x00000000, /* counter: */ 9 }

#define INIT_FOLLOW_OF_QUALIFIED_IMPORT \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_UNQUALIFIED_IMPORT \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_IDENT_LIST \
  { /* bits: */ 0x00000000, 0x80000000, 0x00000021, /* counter: */ 3 }

#define INIT_FOLLOW_OF_DEFINITION \
  { /* bits: */ 0x00001000, 0x00000000, 0x00000000, /* counter: */ 1 }

#define INIT_FOLLOW_OF_CONST_DEFINITION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_TYPE_DEFINITION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_DERIVED_OR_SUBRANGE_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_QUALIDENT \
  { /* bits: */ 0x06501F12, 0x3FFC002C, 0x0000037B, /* counter: */ 34 }

#define INIT_FOLLOW_OF_RANGE \
  { /* bits: */ 0x02000000, 0x20000000, 0x00000001, /* counter: */ 3 }

#define INIT_FOLLOW_OF_ENUM_TYPE \
  { /* bits: */ 0x02000000, 0x20000000, 0x00000001, /* counter: */ 3 }

#define INIT_FOLLOW_OF_SET_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_COUNTABLE_TYPE \
  { /* bits: */ 0x02000000, 0x20000000, 0x00000001, /* counter: */ 3 }

#define INIT_FOLLOW_OF_ARRAY_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_EXTENSIBLE_RECORD_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_FIELD_LIST_SEQUENCE \
  { /* bits: */ 0x00001000, 0x00000040, 0x00000000, /* counter: */ 2 }

#define INIT_FOLLOW_OF_VARIANT_RECORD_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_VARIANT_FIELD_LIST_SEQ \
  { /* bits: */ 0x00001400, 0x00000000, 0x00000008, /* counter: */ 3 }

#define INIT_FOLLOW_OF_VARIANT_FIELD_LIST \
  { /* bits: */ 0x00001400, 0x00000000, 0x00000009, /* counter: */ 4 }

#define INIT_FOLLOW_OF_VARIANT_FIELDS \
  { /* bits: */ 0x00001400, 0x00000000, 0x00000009, /* counter: */ 4 }

#define INIT_FOLLOW_OF_VARIANT \
  { /* bits: */ 0x00001400, 0x00000000, 0x00000008, /* counter: */ 3 }

#define INIT_FOLLOW_OF_CASE_LABEL_LIST \
  { /* bits: */ 0x00000000, 0x80000000, 0x00000000, /* counter: */ 1 }

#define INIT_FOLLOW_OF_CASE_LABELS \
  { /* bits: */ 0x00000000, 0xA0000000, 0x00000000, /* counter: */ 2 }

#define INIT_FOLLOW_OF_POINTER_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_PROCEDURE_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_SIMPLE_FORMAL_TYPE \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000020, /* counter: */ 2 }

#define INIT_FOLLOW_OF_PROCEDURE_HEADER \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_PROCEDURE_SIGNATURE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_SIMPLE_FORMAL_PARAMS \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000021, /* counter: */ 2 }

#define INIT_FOLLOW_OF_IMPLEMENTATION_MODULE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000400, /* counter: */ 1 }

#define INIT_FOLLOW_OF_PROGRAM_MODULE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000400, /* counter: */ 1 }

#define INIT_FOLLOW_OF_MODULE_PRIORITY \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_BLOCK \
  { /* bits: */ 0x00000000, 0x00000200, 0x00000000, /* counter: */ 1 }

#define INIT_FOLLOW_OF_DECLARATION \
  { /* bits: */ 0x00001008, 0x00000000, 0x00000000, /* counter: */ 2 }

#define INIT_FOLLOW_OF_TYPE_DECLARATION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_VAR_SIZE_RECORD_TYPE \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_VARIABLE_DECLARATION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_PROCEDURE_DECLARATION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_MODULE_DECLARATION \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_EXPORT \
  { /* bits: */ 0x10801048, 0x00000050, 0x00000000, /* counter: */ 7 }

#define INIT_FOLLOW_OF_STATEMENT_SEQUENCE \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000008, /* counter: */ 5 }

#define INIT_FOLLOW_OF_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_ASSIGNMENT_OR_PROC_CALL \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_ACTUAL_PARAMETERS \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_EXPRESSION_LIST \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000020, /* counter: */ 1 }

#define INIT_FOLLOW_OF_RETURN_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_WITH_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_IF_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_CASE_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_CASE \
  { /* bits: */ 0x00001400, 0x00000000, 0x00000008, /* counter: */ 3 }

#define INIT_FOLLOW_OF_LOOP_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_WHILE_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_REPEAT_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_FOR_STATEMENT \
  { /* bits: */ 0x00001C00, 0x00000020, 0x00000009, /* counter: */ 6 }

#define INIT_FOLLOW_OF_DESIGNATOR \
  { /* bits: */ 0x06501F12, 0x3FFC002C, 0x0000033B, /* counter: */ 33 }

#define INIT_FOLLOW_OF_SELECTOR \
  { /* bits: */ 0x06501F12, 0x3FFC022C, 0x0000033B, /* counter: */ 34 }

#define INIT_FOLLOW_OF_EXPRESSION \
  { /* bits: */ 0x02001E10, 0x2000002C, 0x0000022B, /* counter: */ 15 }

#define INIT_FOLLOW_OF_SIMPLE_EXPRESSION \
  { /* bits: */ 0x02101E10, 0x23F0002C, 0x0000022B, /* counter: */ 22 }

#define INIT_FOLLOW_OF_TERM \
  { /* bits: */ 0x06101E10, 0x23FC002C, 0x0000022B, /* counter: */ 25 }

#define INIT_FOLLOW_OF_SIMPLE_TERM \
  { /* bits: */ 0x06501F12, 0x2FFC002C, 0x0000022B, /* counter: */ 30 }

#define INIT_FOLLOW_OF_FACTOR \
  { /* bits: */ 0x06501F12, 0x2FFC002C, 0x0000022B, /* counter: */ 30 }

#define INIT_FOLLOW_OF_DESIGNATOR_OR_FUNC_CALL \
  { /* bits: */ 0x06501F12, 0x2FFC002C, 0x0000022B, /* counter: */ 30 }

#define INIT_FOLLOW_OF_SET_VALUE \
  { /* bits: */ 0x06501F12, 0x2FFC002C, 0x0000022B, /* counter: */ 30 }

#define INIT_FOLLOW_OF_ELEMENT \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000200, /* counter: */ 2 }

#define INIT_FOLLOW_OF_FORMAL_TYPE \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000020, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ATTRIBUTED_FORMAL_TYPE \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000020, /* counter: */ 2 }

#define INIT_FOLLOW_OF_FORMAL_PARAM_LIST \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000020, /* counter: */ 1 }

#define INIT_FOLLOW_OF_FORMAL_PARAMS \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000021, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ATTRIB_FORMAL_PARAMS \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000021, /* counter: */ 2 }

#define INIT_FOLLOW_OF_TYPE_DECLARATION_TAIL \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#define INIT_FOLLOW_OF_ALT_FORMAL_TYPE \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000020, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ALT_ATTRIB_FORMAL_TYPE \
  { /* bits: */ 0x00000000, 0x20000000, 0x00000020, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ALT_FORMAL_PARAM_LIST \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000020, /* counter: */ 1 }

#define INIT_FOLLOW_OF_ALT_FORMAL_PARAMS \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000021, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ALT_ATTRIB_FORMAL_PARAMS \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000021, /* counter: */ 2 }

#define INIT_FOLLOW_OF_ALT_TYPE_DECL_TAIL \
  { /* bits: */ 0x00000000, 0x00000000, 0x00000001, /* counter: */ 1 }

#endif /* M2C_FOLLOW_SET_INITS_H */

/* END OF FILE */
